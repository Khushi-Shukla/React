[{"D:\\fullStack\\react\\React\\src\\index.js":"1","D:\\fullStack\\react\\React\\src\\reportWebVitals.js":"2","D:\\fullStack\\react\\React\\src\\App.js":"3","D:\\fullStack\\react\\React\\src\\shared\\dishes.js":"4","D:\\fullStack\\react\\React\\src\\components\\MenuComponent.js":"5","D:\\fullStack\\react\\React\\src\\components\\DishDetailComponent.js":"6","D:\\fullStack\\react\\react\\src\\index.js":"7","D:\\fullStack\\react\\react\\src\\reportWebVitals.js":"8","D:\\fullStack\\react\\react\\src\\App.js":"9","D:\\fullStack\\react\\react\\src\\shared\\dishes.js":"10","D:\\fullStack\\react\\react\\src\\components\\MenuComponent.js":"11","D:\\fullStack\\react\\react\\src\\components\\DishDetailComponent.js":"12","D:\\fullStack\\react\\React\\src\\components\\MainComponent.js":"13","D:\\fullStack\\react\\React\\src\\components\\FooterComponent.js":"14","D:\\fullStack\\react\\React\\src\\components\\HeaderComponent.js":"15","D:\\fullStack\\react\\React\\src\\components\\HomeComponent.js":"16","D:\\fullStack\\react\\React\\src\\components\\ContactComponent.js":"17","D:\\fullStack\\react\\React\\src\\shared\\leaders.js":"18","D:\\fullStack\\react\\React\\src\\shared\\comments.js":"19","D:\\fullStack\\react\\React\\src\\shared\\promotions.js":"20","D:\\fullStack\\react\\React\\src\\components\\AboutComponent.js":"21","D:\\fullStack\\react\\React\\src\\redux\\configureStore.js":"22","D:\\fullStack\\react\\React\\src\\redux\\dishes.js":"23","D:\\fullStack\\react\\React\\src\\redux\\promotions.js":"24","D:\\fullStack\\react\\React\\src\\redux\\comments.js":"25","D:\\fullStack\\react\\React\\src\\redux\\leaders.js":"26"},{"size":722,"mtime":1615905332189,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1613309081000,"results":"29","hashOfConfig":"28"},{"size":555,"mtime":1616337099109,"results":"30","hashOfConfig":"28"},{"size":1490,"mtime":1615924029463,"results":"31","hashOfConfig":"28"},{"size":1518,"mtime":1615976993385,"results":"32","hashOfConfig":"28"},{"size":7124,"mtime":1616415310943,"results":"33","hashOfConfig":"28"},{"size":628,"mtime":1614893032169,"results":"34","hashOfConfig":"35"},{"size":375,"mtime":1613309081000,"results":"36","hashOfConfig":"35"},{"size":671,"mtime":1614893032148,"results":"37","hashOfConfig":"35"},{"size":6065,"mtime":1613325143861,"results":"38","hashOfConfig":"35"},{"size":1557,"mtime":1614893032168,"results":"39","hashOfConfig":"35"},{"size":2238,"mtime":1614893366117,"results":"40","hashOfConfig":"35"},{"size":1982,"mtime":1616337291991,"results":"41","hashOfConfig":"28"},{"size":2639,"mtime":1615911103616,"results":"42","hashOfConfig":"28"},{"size":5329,"mtime":1616247936523,"results":"43","hashOfConfig":"28"},{"size":1151,"mtime":1615925277303,"results":"44","hashOfConfig":"28"},{"size":10804,"mtime":1616396863396,"results":"45","hashOfConfig":"28"},{"size":2383,"mtime":1616177642646,"results":"46","hashOfConfig":"28"},{"size":4279,"mtime":1615924022081,"results":"47","hashOfConfig":"28"},{"size":445,"mtime":1615924023849,"results":"48","hashOfConfig":"28"},{"size":4582,"mtime":1616243193588,"results":"49","hashOfConfig":"28"},{"size":479,"mtime":1616479863185,"results":"50","hashOfConfig":"28"},{"size":176,"mtime":1616479863185,"results":"51","hashOfConfig":"28"},{"size":192,"mtime":1616479863185,"results":"52","hashOfConfig":"28"},{"size":183,"mtime":1616479863185,"results":"53","hashOfConfig":"28"},{"size":180,"mtime":1616479863185,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"g8qdny",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6mwz8o",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\fullStack\\react\\React\\src\\index.js",[],["113","114"],"D:\\fullStack\\react\\React\\src\\reportWebVitals.js",[],"D:\\fullStack\\react\\React\\src\\App.js",[],"D:\\fullStack\\react\\React\\src\\shared\\dishes.js",[],"D:\\fullStack\\react\\React\\src\\components\\MenuComponent.js",[],"D:\\fullStack\\react\\React\\src\\components\\DishDetailComponent.js",["115","116","117"],"import React, { Component } from 'react'\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,Col, Row, Modal, ModalHeader, Button, Label, ModalBody  } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\n function RenderDish({dish}) {\r\n\r\n        if (dish != null) {\r\n            return (\r\n                <div className='col-12 col-md-5 m-1'>\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle> {dish.name}</CardTitle>\r\n                            <CardText> {dish.description} </CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>   \r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function RenderComments({comments}){\r\n        if (comments == null) {\r\n            return (<div></div>)\r\n        }\r\n        const cmnts = comments.map(comment => {\r\n            return (\r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author},\r\n                    &nbsp;\r\n                    {new Intl.DateTimeFormat('en-US', {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: '2-digit'\r\n                    }).format(new Date(comment.date))}\r\n                    </p>\r\n                    \r\n                </li>\r\n               \r\n            )\r\n            \r\n        })\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <h4> Comments </h4>\r\n                <ul className='list-unstyled'>\r\n                    {cmnts}\r\n                </ul>\r\n                <CommentForm />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const maxLength = (len) => (val) => !(val) || (val.length<=len);\r\n    const minLength = (len) => (val) => (val) && (val.length>=len);\r\n    const  DishDetail = (props)=>{\r\n        const dish = props.dish\r\n\r\n        console.log(dish);\r\n        \r\n        if (dish == null) {\r\n            return (<div></div>);\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        {/* <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem> */}\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    class  CommentForm extends Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state={\r\n                isModalOpen:false\r\n            };\r\n            this.toggleModal=this.toggleModal.bind(this);\r\n            this.handleSubmit=this.handleSubmit.bind(this);\r\n        }\r\n\r\n        toggleModal(){\r\n           this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n           });\r\n           console.log(\"i\")\r\n        }\r\n\r\n        handleSubmit(values){\r\n            this.toggleModal();\r\n            console.log(\"Current State is: \"+ JSON.stringify(values))\r\n            alert(\"Current State is: \"+ JSON.stringify(values))\r\n            \r\n        }\r\n\r\n       render(){\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                        <Button onClick={this.toggleModal} outline><span className=\"fa fa-sm fa-pencil\"> Submit Comment</span></Button>                        \r\n                </div>\r\n \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\r\n                    <ModalHeader toggle={this.toggleModal}> Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values)=> this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={10}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" value=\"1\" name=\"rating\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col> \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"username\" md={10}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".username\" placeholder=\"Your Name\" name=\"username\" className=\"form-control\" \r\n                                    validators={{\r\n                                        minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                   <Errors className=\"text-danger\" model=\".username\" show=\"touched\"\r\n                                   messages={{\r\n                                    minLength: 'Must be greater than 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less',\r\n                                   }} />\r\n                                </Col> \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={10}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" rows=\"6\" name=\"comment\" className=\"form-control\">\r\n                                    </Control.textarea>\r\n                                </Col> \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n                \r\n            </div>\r\n        );\r\n       }\r\n    }\r\n\r\n\r\nexport default DishDetail;","D:\\fullStack\\react\\react\\src\\index.js",[],"D:\\fullStack\\react\\react\\src\\reportWebVitals.js",[],"D:\\fullStack\\react\\react\\src\\App.js",[],"D:\\fullStack\\react\\react\\src\\shared\\dishes.js",[],"D:\\fullStack\\react\\react\\src\\components\\MenuComponent.js",["118","119"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\r\nimport DishDetail from \"./DishDetailComponent\";\r\n\r\nclass Menu extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n           selectedDish: null\r\n        }\r\n    }\r\n\r\n    onDishSelect(dish){\r\n        this.setState({selectedDish:dish});\r\n    }\r\n\r\n\r\n    render() {\r\n        const menu = this.props.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\"> \r\n                {/* key is used to uniquely identify each item*/}\r\n                    <Card onClick={()=>this.onDishSelect(dish)}>\r\n                        <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                        <CardImgOverlay>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                        </CardImgOverlay>                       \r\n                    </Card>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return ( \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n                <div className=\"row\">\r\n                    {/* {this.renderDish(this.state.selectedDish)} */}\r\n                  \r\n                    <DishDetail selectedDish={this.state.selectedDish}/>\r\n                  \r\n                </div>\r\n                \r\n               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","D:\\fullStack\\react\\react\\src\\components\\DishDetailComponent.js",["120","121"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, Media, CardText, CardBody, CardTitle } from 'reactstrap';\r\nimport '../App.css'\r\nclass DishDetail extends Component{\r\n\r\n    renderDish(dish){\r\n        if(dish!=null){\r\n            return(\r\n                <Card>\r\n                     <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                     <CardBody>\r\n                         <CardTitle>{dish.name}</CardTitle>\r\n                         <CardText>{dish.description} </CardText>\r\n                     </CardBody>\r\n                </Card>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderComments(dish){\r\n        if(dish!=null){\r\n            const coms=dish.comments.map((c)=>{\r\n                if(c!=null)\r\n              return(\r\n                \r\n                    <li key={c.id}>\r\n                        <p>\r\n                        {c.comment}\r\n                       </p>\r\n                       <p> --{c.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(c.date)))} </p>\r\n                        {/* {c.date}</p> */}\r\n                   </li>\r\n                 );\r\n         });\r\n    \r\n         return(\r\n            \r\n              <div className=\"container\">\r\n    \r\n                  <h3> Comments</h3>\r\n                  <ul class=\"list-unstyled\" id=\"list\">\r\n                 {coms}\r\n                 </ul>\r\n                  \r\n              </div>\r\n                 \r\n            \r\n         );\r\n        }\r\n        \r\n    }\r\n                           \r\n\r\n    render(){\r\n        // const dish=this.props.selectedDish;\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"row col-md\">\r\n                    {this.renderDish(this.props.selectedDish)}\r\n                    </div>\r\n                    <div className=\"row col-md\">\r\n                    {this.renderComments(this.props.selectedDish)}\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n       \r\n        );\r\n    }\r\n    \r\n}\r\nexport default DishDetail;","D:\\fullStack\\react\\React\\src\\components\\MainComponent.js",["122"],"import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport About from './AboutComponent'\r\nimport Header from './HeaderComponent'\r\nimport Footer from './FooterComponent'\r\nimport Contact from './ContactComponent'\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  // onDishSelect(dishId) {\r\n  //   this.setState({ selectedDish: dishId});\r\n  // }\r\n  \r\n\r\n  render() {\r\n    const HomePage=()=>{\r\n      return(\r\n      <Home dish={this.props.dishes.filter((dish)=>dish.featured)[0]} promotion={this.props.promotions.filter((promo)=>promo.featured)[0]}  leader={this.props.leaders.filter((lead)=>lead.featured)[0]} />\r\n      );\r\n    }\r\n\r\n    \r\n    const DishWithId =({match})=>{\r\n      return(\r\n        <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n        comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} />\r\n \r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/home\" component={HomePage} />\r\n          <Route exact path=\"/menu\" component={()=> <Menu dishes={this.props.dishes} /> } />\r\n          <Route path='/menu/:dishId' component={DishWithId} />\r\n          <Route exact path=\"/contactus\" component={Contact} />\r\n          <Route path=\"/aboutus\" component={()=><About leader={this.props.leaders} />} />\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Main));","D:\\fullStack\\react\\React\\src\\components\\FooterComponent.js",[],"D:\\fullStack\\react\\React\\src\\components\\HeaderComponent.js",[],"D:\\fullStack\\react\\React\\src\\components\\HomeComponent.js",[],"D:\\fullStack\\react\\React\\src\\components\\ContactComponent.js",["123","124","125","126","127","128","129","130"],"import React, { Component } from 'react'\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val)=>val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length<=len);\r\nconst minLength = (len) => (val) => (val) && (val.length>=len);\r\nconst isNumber = (val)=> !isNaN(Number(val))\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component  {\r\n\r\n    constructor(props){\r\n        super(props);\r\n       \r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n \r\n    }\r\n\r\n\r\n    handleSubmit(values){\r\n        console.log(\"Current State is: \"+ JSON.stringify(values))\r\n        alert(\"Current State is: \"+ JSON.stringify(values))\r\n        // event.preventDefault();\r\n    }\r\n\r\n  \r\n\r\n    render(){\r\n    //    const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Contact Us</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div class=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values)=> this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\" className=\"form-control\" \r\n                                        validators={{\r\n                                            required,minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                      <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"  className=\"form-control\"\r\n                                        validators={{\r\n                                            required,minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                      <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                        />\r\n\r\n                                </Col>                        \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. number\"  className=\"form-control\"\r\n                                        validators={{\r\n                                            required, isNumber,minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                        />\r\n                                      <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"  className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                        />\r\n                                     <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email address'\r\n                                        }}\r\n                                        />   \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\" >\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" className=\"form-check-input\"\r\n                                                name=\"agree\" /> \r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\" className=\"form-control\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    }\r\n    \r\n\r\nexport default Contact;","D:\\fullStack\\react\\React\\src\\shared\\leaders.js",[],"D:\\fullStack\\react\\React\\src\\shared\\comments.js",[],"D:\\fullStack\\react\\React\\src\\shared\\promotions.js",[],"D:\\fullStack\\react\\React\\src\\components\\AboutComponent.js",[],"D:\\fullStack\\react\\React\\src\\redux\\configureStore.js",[],"D:\\fullStack\\react\\React\\src\\redux\\dishes.js",[],"D:\\fullStack\\react\\React\\src\\redux\\promotions.js",[],"D:\\fullStack\\react\\React\\src\\redux\\comments.js",[],"D:\\fullStack\\react\\React\\src\\redux\\leaders.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":131,"column":37,"nodeType":"137","endLine":131,"endColumn":118},{"ruleId":"135","severity":1,"message":"138","line":143,"column":37,"nodeType":"137","endLine":147,"endColumn":39},{"ruleId":"135","severity":1,"message":"139","line":158,"column":37,"nodeType":"137","endLine":158,"endColumn":121},{"ruleId":"140","severity":1,"message":"141","line":2,"column":41,"nodeType":"142","messageId":"143","endLine":2,"endColumn":49},{"ruleId":"140","severity":1,"message":"144","line":2,"column":51,"nodeType":"142","messageId":"143","endLine":2,"endColumn":59},{"ruleId":"140","severity":1,"message":"145","line":2,"column":25,"nodeType":"142","messageId":"143","endLine":2,"endColumn":30},{"ruleId":"146","severity":1,"message":"147","line":27,"column":45,"nodeType":"148","messageId":"149","endLine":27,"endColumn":47},{"ruleId":"150","severity":1,"message":"151","line":23,"column":3,"nodeType":"152","messageId":"153","endLine":26,"endColumn":4},{"ruleId":"154","severity":1,"message":"155","line":66,"column":29,"nodeType":"137","endLine":66,"endColumn":71},{"ruleId":"135","severity":1,"message":"138","line":80,"column":37,"nodeType":"137","endLine":84,"endColumn":46},{"ruleId":"135","severity":1,"message":"138","line":100,"column":37,"nodeType":"137","endLine":105,"endColumn":44},{"ruleId":"135","severity":1,"message":"138","line":122,"column":37,"nodeType":"137","endLine":127,"endColumn":43},{"ruleId":"135","severity":1,"message":"138","line":144,"column":37,"nodeType":"137","endLine":149,"endColumn":43},{"ruleId":"135","severity":1,"message":"156","line":165,"column":45,"nodeType":"137","endLine":166,"endColumn":64},{"ruleId":"135","severity":1,"message":"136","line":172,"column":37,"nodeType":"137","endLine":172,"endColumn":118},{"ruleId":"135","severity":1,"message":"139","line":181,"column":37,"nodeType":"137","endLine":182,"endColumn":76},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'CardText' is defined but never used.","Identifier","unusedVar","'CardBody' is defined but never used.","'Media' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]